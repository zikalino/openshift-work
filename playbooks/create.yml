# Description
# ===========
# Use this playbook to query all the resources in a given resource group.
# This sample requires Ansible 2.6 

---
- hosts: localhost
  vars:
    resource_group: zims-openshiftx
    location: eastus
    persistent_volume_name: "pv1saunique1223344"
    admin_user_name: zim

  tasks:
    - name: Create a resource group
      azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ location }}"

    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group }}"
        name: openshiftvnet
        address_prefixes: "10.0.0.0/16"

    - name: Add subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: openshiftsubnet
        address_prefix: "10.0.1.0/24"
        virtual_network: openshiftvnet

    - name: Create public IP address
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Dynamic
        name: mycluster_publicip

    - name: Create infrastructure NSG
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: mycluster-infra-nsg
        rules:
          - name: allowSSHin_all
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
          - name: allowHTTPSIn_all
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 200
            direction: Inbound
          - name: allowHTTPIn_all
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 300
            direction: Inbound

    - name: Create master NSG
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: mycluster-master-nsg
        rules:
          - name: allowSSHin_all
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
          - name: allowHTTPSIn_all
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 200
            direction: Inbound

    - name: Create node NSG
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: mycluster-node-nsg
        rules:
          - name: allowSSHin_all
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
          - name: allowHTTPSIn_all
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 200
            direction: Inbound
          - name: allowHTTPIn_all
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 300
            direction: Inbound

    - name: Create a load balancer
      azure_rm_loadbalancer:
        name: mycluster-masterlb
        location: eastus
        resource_group: "{{ resource_group }}"
        public_ip: mycluster_publicip
        probe_protocol: Tcp
        probe_port: 80
        probe_interval: 10
        probe_fail_count: 3
        protocol: Tcp
        load_distribution: Default
        frontend_port: 80
        backend_port: 8080
        idle_timeout: 4
        inbound_nat_pools:
          - name: inboundnatpool
            backend_port: 22
            frontend_port_range_start: 2000
            frontend_port_range_end: 2005
            frontend_ip_configuration_name: frontendip
        frontend_ip_configurations:
          - name: frontendip
            public_ip_address: mycluster_publicip
        load_balancing_rules:
          - name: loadbalancingrule
            frontend_ip_configuration: frontendip
            probe: prob0
            backend_address_pool: backendaddrpool0
            frontend_port: 443
            backend_port: 443
        backend_address_pools:
          - name: backendaddrpool0
        probes:
          - name: prob0
            port: 443
      register: lb

    - name: Create virtual network inteface card
      azure_rm_networkinterface:
        resource_group: "{{ resource_group }}"
        name: mycluster-master-0-nic
        virtual_network: openshiftvnet
        subnet: openshiftsubnet
        security_group: mycluster-master-nsg
        ip_configurations:
          - name: ipconfig1
            load_balancer_backend_address_pools:
              - name: backendaddrpool0
                load_balancer: mycluster-masterlb

    - name: Create virtual network inteface card
      azure_rm_networkinterface:
        resource_group: "{{ resource_group }}"
        name: mycluster-node-0-nic
        virtual_network: openshiftvnet
        subnet: openshiftsubnet
        security_group: mycluster-node-nsg

    - name: Create master availability set
      azure_rm_availabilityset:
        name: masteravailabilityset
        location: eastus
        resource_group: "{{ resource_group }}"
        sku: Aligned

    - name: Create node availability set
      azure_rm_availabilityset:
        name: nodeavailabilityset
        location: eastus
        resource_group: "{{ resource_group }}"
        sku: Aligned

    - name: Create master VMs
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: mycluster-master-0
        managed_disk_type: Standard_LRS
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: Password@123
        network_interfaces: mycluster-master-0-nic
        image:
          offer: CentOS
          publisher: OpenLogic
          sku: 7.4
          version: latest
        data_disks:
            - lun: 0
              disk_size_gb: 64
              managed_disk_type: Standard_LRS
        availability_set: masteravailabilityset

    - name: Create master VM extension
      azure_rm_virtualmachine_extension:
        resource_group: "{{ resource_group }}"
        name: deployOpenShift
        virtual_machine_name: mycluster-master-0
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings:
          fileUris:
            - 'https://raw.githubusercontent.com/Microsoft/openshift-origin/master/scripts/masterPrep.sh'
          commandToExecute: "bash masterPrep.sh {{ persistent_volume_name }} {{ admin_user_name }} {{ location }}"

    - name: Create node VMs
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: mycluster-node-0
        managed_disk_type: Standard_LRS
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: Password@123
        network_interfaces: mycluster-node-0-nic
        image:
          offer: CentOS
          publisher: OpenLogic
          sku: 7.4
          version: latest
        data_disks:
            - lun: 0
              disk_size_gb: 64
              managed_disk_type: Standard_LRS
        availability_set: nodeavailabilityset

    - name: Create node VM extension
      azure_rm_virtualmachine_extension:
        resource_group: "{{ resource_group }}"
        name: deployOpenShift
        virtual_machine_name: mycluster-node-0
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings:
          fileUris:
            - 'https://raw.githubusercontent.com/Microsoft/openshift-origin/master/scripts/nodePrep.sh'
          commandToExecute: "bash nodePrep.sh"


