# Description
# ===========
# OpenShift sample for Azure

---
- hosts: localhost
  vars:
    resource_group: zims-openshiftxx
    location: eastus
    cluster_prefix: mycluster
    persistent_volume_name: "pv1saunique1223344"
    admin_user_name: zim
    master_count: 3
    infra_count: 3
    node_count: 3
    runvmext: "false"

  tasks:
    - name: Create a resource group
      azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ location }}"

    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group }}"
        name: openshiftvnet
        address_prefixes: "10.0.0.0/14"

    - name: Add master subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: mastersubnet
        address_prefix: "10.1.0.0/16"
        virtual_network: openshiftvnet
  
    - name: Add node subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: nodesubnet
        address_prefix: "10.2.0.0/16"
        virtual_network: openshiftvnet
  
    - name: Add infra subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: infrasubnet
        address_prefix: "10.3.0.0/16"
        virtual_network: openshiftvnet
        
    - name: Create public IP address for Master LB
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Dynamic
        name: masterlb_publicip

    - name: Create public IP address for Infra LB
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Dynamic
        name: infralb_publicip

    - name: Create infrastructure NSG
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-infra-nsg"
        rules:
          - name: allowSSHin_all
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
          - name: allowHTTPSIn_all
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 200
            direction: Inbound
          - name: allowHTTPIn_all
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 300
            direction: Inbound

    - name: Create master NSG
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-master-nsg"
        rules:
          - name: allowSSHin_all
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
          - name: allowHTTPSIn_all
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 200
            direction: Inbound

    - name: Create node NSG
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-node-nsg"
        rules:
          - name: allowSSHin_all
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
          - name: allowHTTPSIn_all
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 200
            direction: Inbound
          - name: allowHTTPIn_all
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 300
            direction: Inbound

    - name: Create master load balancer
      azure_rm_loadbalancer:
        name: "{{ cluster_prefix }}-masterlb"
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        public_ip: masterlb_publicip
        frontend_ip_configurations:
          - name: frontendip
            public_ip_address: masterlb_publicip
        load_balancing_rules:
          - name: OpenShiftAdminConsole
            frontend_ip_configuration: frontendip
            load_distribution: SourceIP
            idle_timeout: 15
            probe: httpsprobe
            backend_address_pool: backendaddrpool0
            frontend_port: 443
            backend_port: 443
        backend_address_pools:
          - name: backendaddrpool0
        probes:
          - name: httpsprobe
            port: 443

    - name: Create infra load balancer
      azure_rm_loadbalancer:
        name: "{{ cluster_prefix }}-infralb"
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        public_ip: infralb_publicip
        frontend_ip_configurations:
          - name: frontendip
            public_ip_address: infralb_publicip
        load_balancing_rules:
          - name: OpenShiftRouterHTTP
            frontend_ip_configuration: frontendip
            probe: httpprobe
            backend_address_pool: backendaddrpool0
            frontend_port: 80
            backend_port: 80
          - name: OpenShiftRouterHTTPS
            frontend_ip_configuration: frontendip
            probe: httpsprobe
            backend_address_pool: backendaddrpool0
            frontend_port: 443
            backend_port: 443
        backend_address_pools:
          - name: backendaddrpool0
        probes:
          - name: httpsprobe
            port: 443
          - name: httpprobe
            port: 80

    - name: Create virtual network inteface card for master
      azure_rm_networkinterface:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-master-{{ item }}-nic"
        virtual_network: openshiftvnet
        subnet: mastersubnet
        security_group: "{{ cluster_prefix }}-master-nsg"
        ip_configurations:
          - name: ipconfig1
            load_balancer_backend_address_pools:
              - name: backendaddrpool0
                load_balancer: "{{ cluster_prefix }}-masterlb"
      with_sequence: start=0 end={{ master_count - 1 }}

    - name: Create virtual network inteface card for node
      azure_rm_networkinterface:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-node-{{ item }}-nic"
        virtual_network: openshiftvnet
        subnet: nodesubnet
        security_group: "{{ cluster_prefix }}-node-nsg"
      with_sequence: start=0 end={{ node_count - 1 }}

    - name: Create virtual network inteface card for infra
      azure_rm_networkinterface:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-infra-{{ item }}-nic"
        virtual_network: openshiftvnet
        subnet: infrasubnet
        security_group: "{{ cluster_prefix }}-infra-nsg"
        ip_configurations:
          - name: ipconfig1
            load_balancer_backend_address_pools:
              - name: backendaddrpool0
                load_balancer: "{{ cluster_prefix }}-infralb"
      with_sequence: start=0 end={{ infra_count - 1 }}

    - name: Create master availability set
      azure_rm_availabilityset:
        name: masteravailabilityset
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        sku: Aligned

    - name: Create node availability set
      azure_rm_availabilityset:
        name: nodeavailabilityset
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        sku: Aligned

    - name: Create infra availability set
      azure_rm_availabilityset:
        name: infraavailabilityset
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        sku: Aligned

    - name: Create master VMs
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-master-{{ item }}"
        managed_disk_type: Standard_LRS
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: Password@123
        network_interfaces: "{{ cluster_prefix }}-master-{{ item }}-nic"
        image:
          offer: RHEL
          publisher: RedHat
          sku: 7-RAW
          version: latest
        data_disks:
            - lun: 0
              disk_size_gb: 64
              managed_disk_type: Standard_LRS
        availability_set: masteravailabilityset
      with_sequence: start=0 end={{ master_count - 1 }}

    - name: Create node VMs
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-node-{{ item }}"
        managed_disk_type: Standard_LRS
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: Password@123
        network_interfaces: "{{ cluster_prefix }}-node-{{ item }}-nic"
        image:
          offer: RHEL
          publisher: RedHat
          sku: 7-RAW
          version: latest
        data_disks:
            - lun: 0
              disk_size_gb: 64
              managed_disk_type: Standard_LRS
        availability_set: nodeavailabilityset
      with_sequence: start=0 end={{ node_count - 1 }}

    - name: Create infra VMs
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ cluster_prefix }}-infra-{{ item }}"
        managed_disk_type: Standard_LRS
        vm_size: Standard_DS1_v2
        admin_username: azureuser
        admin_password: Password@123
        network_interfaces: "{{ cluster_prefix }}-infra-{{ item }}-nic"
        image:
          offer: RHEL
          publisher: RedHat
          sku: 7-RAW
          version: latest
        data_disks:
            - lun: 0
              disk_size_gb: 64
              managed_disk_type: Standard_LRS
        availability_set: infraavailabilityset
      with_sequence: start=0 end={{ infra_count - 1 }}
  
    - name: Create master VM extension
      azure_rm_virtualmachine_extension:
        resource_group: "{{ resource_group }}"
        name: deployOpenShift
        virtual_machine_name: "{{ cluster_prefix }}-master-{{ item }}"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings:
          fileUris:
            - 'https://raw.githubusercontent.com/Microsoft/openshift-origin/master/scripts/masterPrep.sh'
          commandToExecute: "bash masterPrep.sh {{ persistent_volume_name }} {{ admin_user_name }} {{ location }}"
      with_sequence: start=0 end={{ master_count - 1 }}
      when: runvmext == "true"
  
    - name: Create infra VM extension
      azure_rm_virtualmachine_extension:
        resource_group: "{{ resource_group }}"
        name: deployOpenShift
        virtual_machine_name: "{{ cluster_prefix }}-infra-{{ item }}"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings:
          fileUris:
            - 'https://raw.githubusercontent.com/Microsoft/openshift-origin/master/scripts/nodePrep.sh'
          commandToExecute: "bash nodePrep.sh"
      with_sequence: start=0 end={{ infra_count - 1 }}
      when: runvmext == "true"

    - name: Create node VM extension
      azure_rm_virtualmachine_extension:
        resource_group: "{{ resource_group }}"
        name: deployOpenShift
        virtual_machine_name: "{{ cluster_prefix }}-node-{{ item }}"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings:
          fileUris:
            - 'https://raw.githubusercontent.com/Microsoft/openshift-origin/master/scripts/nodePrep.sh'
          commandToExecute: "bash nodePrep.sh"
      with_sequence: start=0 end={{ node_count - 1 }}
      when: runvmext == "true"
